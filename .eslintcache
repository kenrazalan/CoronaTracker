[{"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\App.js":"1","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\reportWebVitals.js":"2","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\api\\index.js":"3","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\index.js":"4","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Cards\\CardComponent.js":"5","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\country\\Country.js":"6","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Cards\\Cards.js":"7","D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Chart\\Chart.js":"8"},{"size":1130,"mtime":1611989393635,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607933025060,"results":"11","hashOfConfig":"10"},{"size":1057,"mtime":1611987331890,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1607933025060,"results":"13","hashOfConfig":"10"},{"size":986,"mtime":1611990253937,"results":"14","hashOfConfig":"10"},{"size":1009,"mtime":1611988696220,"results":"15","hashOfConfig":"10"},{"size":1319,"mtime":1611974197946,"results":"16","hashOfConfig":"10"},{"size":2607,"mtime":1611991912541,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vcrf5n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\App.js",[],["37","38"],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\reportWebVitals.js",[],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\api\\index.js",[],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\index.js",[],["39","40"],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Cards\\CardComponent.js",[],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\country\\Country.js",[],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Cards\\Cards.js",["41","42"],"D:\\Projects\\Corona-tracker\\corona-tracker\\src\\components\\Chart\\Chart.js",["43"],"import React, { useEffect, useState } from 'react'\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport {fetchDailyData} from '../../api'\r\nimport styled from 'styled-components'\r\nimport css from './Chart.module.css'\r\n// const Wrapper = styled.div`\r\n//     .chart{\r\n//         display: flex;\r\n//         justify-content: center;\r\n//         width:\"65%\";\r\n       \r\n//     }\r\n//     @media only screen and (max-width: 770px) {\r\n//   .chart {\r\n//     width: 100%;\r\n//   }\r\n// }\r\n//   `\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths, lastUpdate},country})=>{\r\n    const [dailyData,setDailyData]= useState({})\r\n\r\n    useEffect(()=>{\r\n        const fetchData =async ()=>{\r\n            const data =await fetchDailyData();\r\n            setDailyData(data)\r\n        }\r\n        fetchData()\r\n    },[])\r\n\r\n    const barChart = (\r\n        confirmed?(\r\n            <Bar data={{\r\n                labels:['Infected','Recoverd','Deaths'],\r\n                datasets:[\r\n                    {label: 'People',\r\n                    backgroundColor:\"['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)']\",\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                }\r\n                ]\r\n            }}\r\n            options={{\r\n                legend: {display:false},\r\n                title: {display: true , text: `Current state in ${country}` }\r\n            }}/>\r\n        ): null\r\n\r\n    )\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },  {\r\n                data: dailyData.map((data) => data.recovered),\r\n                label: 'Recovered',\r\n                borderColor: 'green',\r\n                backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n            return(\r\n                <div className={css.charts} style={{width:\"65%\"}}>\r\n                    {country?barChart:lineChart}\r\n                </div>\r\n               \r\n            )\r\n\r\n}\r\n\r\nexport default Chart",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":20,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"54","line":2,"column":25,"nodeType":"52","messageId":"53","endLine":2,"endColumn":36},{"ruleId":"50","severity":1,"message":"55","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","'styled' is defined but never used.","no-global-assign","no-unsafe-negation"]